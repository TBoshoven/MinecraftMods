/*
Build script for all mods.
In principle, building a mod is as simple as adding an empty build.gradle to the mod's directory and updating
settings.gradle.
*/

buildscript {
    repositories {
        mavenLocal()
        gradlePluginPortal()
        maven { url = 'https://maven.neoforged.net/releases' }
    }
    dependencies {
        classpath group: 'net.neoforged.gradle', name: 'userdev', version: '7.0.93'
    }
}

subprojects {
    apply plugin: 'net.neoforged.gradle.userdev'
    apply plugin: 'idea'

    String modName = project.getName().replaceAll(/([a-z])([A-Z])/, /$1_$2/).toLowerCase()

    version = "1.20.4-DEV.0"
    group = "com.tomboshoven.minecraft." + project.getName().toLowerCase()
    archivesBaseName = project.projectDir.name

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)

    runs {
        configureEach {
            systemProperty 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            systemProperty 'forge.logging.console.level', 'debug'
            modSource project.sourceSets.main
        }
        client {}
        server {}
        data {
            systemProperty 'fml.earlyprogresswindow', 'false'
            programArguments.addAll '--mod', modName, '--all',
                    '--existing', file('src/main/resources/').getAbsolutePath(),
                    '--existing', file('src/generated/resources/').getAbsolutePath(),
                    '--output', file('src/generated/resources/').getAbsolutePath()
        }
    }

    // Add generated resources
    sourceSets.main.resources {
        srcDir 'src/generated/resources'
        include 'assets/**', 'data/**', 'META-INF/**', 'logo.png', 'pack.mcmeta'
    }

    dependencies {
        implementation "net.neoforged:neoforge:20.4.169"

        implementation 'com.google.code.findbugs:jsr305:3.0.2'
    }

    jar {
        manifest {
            attributes([
                "Implementation-Version": getArchiveVersion(),
            ])
        }
    }
}
